<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[一行代码解决NavigationController多次push问题]]></title>
      <url>%2F2017%2F01%2F20%2FiOS%2F%E4%B8%80%E8%A1%8C%E4%BB%A3%E7%A0%81%E8%A7%A3%E5%86%B3NavigationController%E5%A4%9A%E6%AC%A1push%E9%97%AE%E9%A2%98%2F</url>
      <content type="text"><![CDATA[新建文件如下 UINavigationController+PushSafe.h 12345#import &lt;UIKit/UIKit.h&gt;@interface UINavigationController(PushSafe)-(void)pushViewController:(UIViewController *)viewController animated:(BOOL)animated safe:(BOOL)safe;@end UINavigationController+PushSafe.m 123456789101112131415161718192021222324252627282930313233#import &quot;UINavigationController+PushSafe.h&quot;@implementation UINavigationController(PushSafe)-(void)pushViewController:(UIViewController *)viewController animated:(BOOL)animated safe:(BOOL)safe&#123; if ([[self.viewControllers lastObject] isKindOfClass:viewController.class]&amp;&amp;safe) &#123; return ; &#125; [self pushViewController:viewController animated:animated];&#125;- (void)viewDidLoad &#123; [super viewDidLoad]; // Do any additional setup after loading the view.&#125;- (void)didReceiveMemoryWarning &#123; [super didReceiveMemoryWarning]; // Dispose of any resources that can be recreated.&#125;/*#pragma mark - Navigation// In a storyboard-based application, you will often want to do a little preparation before navigation- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender &#123; // Get the new view controller using [segue destinationViewController]. // Pass the selected object to the new view controller.&#125;*/@end 使用方法 1[self.navigationController pushViewController:chatController animated:YES safe:YES];]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[解决UIWebView显示HTML字符串特殊符号问题]]></title>
      <url>%2F2017%2F01%2F10%2FiOS%2F%E8%A7%A3%E5%86%B3UIWebView%E6%98%BE%E7%A4%BAHTML%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%89%B9%E6%AE%8A%E7%AC%A6%E5%8F%B7%E9%97%AE%E9%A2%98%2F</url>
      <content type="text"><![CDATA[做项目时后台传入的HTML字符串本来是 &lt;p&gt;&lt;strong&gt;balabalaba&lt;/p&gt;&lt;/strong&gt; 结果被转码成了 &amp;lt;p&amp;gt;&amp;lt;strong&amp;gt;balabalaba&amp;lt;/strong&amp;gt;&amp;lt;/p&amp;gt; 加载到webView显示会有问题，解决办法: 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596- (NSString *)stringByDecodingXMLEntities &#123; NSUInteger myLength = [self length]; NSUInteger ampIndex = [self rangeOfString:@&quot;&amp;&quot; options:NSLiteralSearch].location; // Short-circuit if there are no ampersands. if (ampIndex == NSNotFound) &#123; return self; &#125; // Make result string with some extra capacity. NSMutableString *result = [NSMutableString stringWithCapacity:(myLength * 1.25)]; // First iteration doesn&apos;t need to scan to &amp; since we did that already, but for code simplicity&apos;s sake we&apos;ll do it again with the scanner. NSScanner *scanner = [NSScanner scannerWithString:self]; [scanner setCharactersToBeSkipped:nil]; NSCharacterSet *boundaryCharacterSet = [NSCharacterSet characterSetWithCharactersInString:@&quot; \t\n\r;&quot;]; do &#123; // Scan up to the next entity or the end of the string. NSString *nonEntityString; if ([scanner scanUpToString:@&quot;&amp;&quot; intoString:&amp;nonEntityString]) &#123; [result appendString:nonEntityString]; &#125; if ([scanner isAtEnd]) &#123; goto finish; &#125; // Scan either a HTML or numeric character entity reference. if ([scanner scanString:@&quot;&amp;&quot; intoString:NULL]) [result appendString:@&quot;&amp;&quot;]; else if ([scanner scanString:@&quot;&apos;&quot; intoString:NULL]) [result appendString:@&quot;&apos;&quot;]; else if ([scanner scanString:@&quot;&quot;&quot; intoString:NULL]) [result appendString:@&quot;\&quot;&quot;]; else if ([scanner scanString:@&quot;&lt;&quot; intoString:NULL]) [result appendString:@&quot;&lt;&quot;]; else if ([scanner scanString:@&quot;&gt;&quot; intoString:NULL]) [result appendString:@&quot;&gt;&quot;]; else if ([scanner scanString:@&quot;&amp;#&quot; intoString:NULL]) &#123; BOOL gotNumber; unsigned charCode; NSString *xForHex = @&quot;&quot;; // Is it hex or decimal? if ([scanner scanString:@&quot;x&quot; intoString:&amp;xForHex]) &#123; gotNumber = [scanner scanHexInt:&amp;charCode]; &#125; else &#123; gotNumber = [scanner scanInt:(int*)&amp;charCode]; &#125; if (gotNumber) &#123; [result appendFormat:@&quot;%C&quot;, charCode]; [scanner scanString:@&quot;;&quot; intoString:NULL]; &#125; else &#123; NSString *unknownEntity = @&quot;&quot;; [scanner scanUpToCharactersFromSet:boundaryCharacterSet intoString:&amp;unknownEntity]; [result appendFormat:@&quot;&amp;#%@%@&quot;, xForHex, unknownEntity]; //[scanner scanUpToString:@&quot;;&quot; intoString:&amp;unknownEntity]; //[result appendFormat:@&quot;&amp;#%@%@;&quot;, xForHex, unknownEntity]; NSLog(@&quot;Expected numeric character entity but got &amp;#%@%@;&quot;, xForHex, unknownEntity); &#125; &#125; else &#123; NSString *amp; [scanner scanString:@&quot;&amp;&quot; intoString:&amp;amp]; //an isolated &amp; symbol [result appendString:amp]; /* NSString *unknownEntity = @&quot;&quot;; [scanner scanUpToString:@&quot;;&quot; intoString:&amp;unknownEntity]; NSString *semicolon = @&quot;&quot;; [scanner scanString:@&quot;;&quot; intoString:&amp;semicolon]; [result appendFormat:@&quot;%@%@&quot;, unknownEntity, semicolon]; NSLog(@&quot;Unsupported XML character entity %@%@&quot;, unknownEntity, semicolon); */ &#125; &#125; while (![scanner isAtEnd]); finish: return result;&#125;]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[SDWebImage更新图片缓存的方法]]></title>
      <url>%2F2016%2F11%2F20%2FiOS%2FSDWebImage%E6%9B%B4%E6%96%B0%E5%9B%BE%E7%89%87%E7%BC%93%E5%AD%98%E7%9A%84%E6%96%B9%E6%B3%95%2F</url>
      <content type="text"><![CDATA[##SDWebImage加载图片，在图片链接相同但图片内容发生变更时，SDWebImage 并不会加载新的图片。此时的解决方案为设置SDWebImage 的option参数为SDWebImageRefreshCached。具体如下图：]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Swift怎么通过类名字符串来创建一个类]]></title>
      <url>%2F2016%2F09%2F20%2FiOS%2FSwift%E6%80%8E%E4%B9%88%E9%80%9A%E8%BF%87%E7%B1%BB%E5%90%8D%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%9D%A5%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%B1%BB%2F</url>
      <content type="text"><![CDATA[OC中可以直接通过类名的字符串转换成对应的类来操作,但是Swift中必须用到命名空间,也就是说Swift中通过字符串获取类的方式为1234567891011let namespace = NSBundle.mainBundle().infoDictionary![&quot;CFBundleExecutable&quot;]guard ((namespace as? String) != nil) else&#123;return &#125;let modelClass : AnyClass? = NSClassFromString((namespace as? String)!+&quot;.&quot;+modelClassStr)let baseModel = modelClass?.alloc()]]></content>
    </entry>

    
  
  
</search>
