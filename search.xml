<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[hexo主题代码怎么高亮显示]]></title>
      <url>%2F2017%2F03%2F07%2Fother%2Fhexo%E4%B8%BB%E9%A2%98%E4%BB%A3%E7%A0%81%E6%80%8E%E4%B9%88%E9%AB%98%E4%BA%AE%E6%98%BE%E7%A4%BA%2F</url>
      <content type="text"><![CDATA[看到很多人跟我一样在按照hexo主题官方文档配置后，结果代码还是不能高亮显示。觉得将它记录下来希望能帮助到刚喜欢用博客来记录东西的朋友。 代码块需要用到两个```,在第一个后面需要加上代码的语言 如图 常用语言对应表 语言 对应代码 Bash bash,sh,zsh C# cs,csharp C++ cpp,c,cc,h,c++,h++,hop CSS css DOS dos,bat,cmd HTML,XML xml,html,xhtml,rss,atom,xjb,xsd,ssl,plist JSON json java java JavaScript javascript, js, jsx Objective-C objectivec, mm, objc, obj-c PHP php, php3, php4, php5, php6 Ruby ruby, rb, gemspec, podspec, thor, irb SQL sql Swift swift VB.Net vbnet, vb]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[DOM对象与jquery对象有什么不同]]></title>
      <url>%2F2017%2F03%2F05%2Fweb%2FDOM%E5%AF%B9%E8%B1%A1%E4%B8%8Ejquery%E5%AF%B9%E8%B1%A1%E6%9C%89%E4%BB%80%E4%B9%88%E4%B8%8D%E5%90%8C%2F</url>
      <content type="text"><![CDATA[jQuery对象和DOM对象第一次学习jQuery,经常分辨不清哪些是jQuery对象，哪些是 DOM对象，因此需要重点了解jQuery对象和DOM对象以及它们之间的关系. DOM对象，即是我们用传统的方法(javascript)获得的对象，jQuery对象即是用jQuery类库的选择器获得的对象; 1var domObj = document.getElementById("id"); //DOM对象 1var $obj = $("#id"); //jQuery对象; jQuery对象就是通过jQuery包装DOM对象后产生的对象，它是jQuery独有的。如果一个对象是jQuery对象，那么就可以使用jQuery里的方法，例: 1$("#foo").html(); //获取id为foo的元素内的html代码，html()是jQuery特有的方法; 上面的那段代码等同于: 1document.getElementById("foo").innerHTML; 注意：在jQuery对象中无法使用DOM对象的任何方法。 例如$(&quot;#id&quot;).innerHTML和$(&quot;#id&quot;).checked之类的写法都是错误的，可以用$(&quot;#id&quot;).html()和$(&quot;#id&quot;).attr (&quot;checked&quot;)之类的jQuery方法来代替。同样，DOM对象也不能使用jQuery方法。 jQuery对象和DOM对象的互相转换jquery对象转换成 dom对象jquery提供了两种方法将一个jquery对象转换成一个dom对象，即[index]和get(index)。可能有人会觉得奇怪，怎么是用下标呢，没错，jquery对象就是一个数组对象. 下面代码将演示一个jquery对象转换成dom对象，再使用dom对象的方法 1var $cr=$("#cr"); //jquery对象 1var cr = $cr[0]; //dom对象 也可写成 var cr=$cr.get(0); 1alert(cr.checked); //检测这个checkbox是否给选中 dom对象转换成jquery对象对于一个dom对象，只需要用$()把dom对象包装起来，就可以获得一个jquery对象了，方法为$(dom对象); 1var cr=document.getElementById("cr"); //dom对象 1var $cr = $(cr); //转换成jquery对象 转换后可以任意使用jquery中的方法了. 通过以上的方法，可以任意的相互转换jquery对象和dom对象.]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[一行代码解决NavigationController多次push问题]]></title>
      <url>%2F2017%2F01%2F20%2FiOS%2F%E4%B8%80%E8%A1%8C%E4%BB%A3%E7%A0%81%E8%A7%A3%E5%86%B3NavigationController%E5%A4%9A%E6%AC%A1push%E9%97%AE%E9%A2%98%2F</url>
      <content type="text"><![CDATA[新建文件如下 UINavigationController+PushSafe.h 123456#import &lt;UIKit/UIKit.h&gt;@interface UINavigationController(PushSafe)-(void)pushViewController:(UIViewController *)viewController animated:(BOOL)animated safe:(BOOL)safe;@end UINavigationController+PushSafe.m 123456789101112131415161718192021222324252627282930313233#import "UINavigationController+PushSafe.h"@implementation UINavigationController(PushSafe)-(void)pushViewController:(UIViewController *)viewController animated:(BOOL)animated safe:(BOOL)safe&#123; if ([[self.viewControllers lastObject] isKindOfClass:viewController.class]&amp;&amp;safe) &#123; return ; &#125; [self pushViewController:viewController animated:animated];&#125;- (void)viewDidLoad &#123; [super viewDidLoad]; // Do any additional setup after loading the view.&#125;- (void)didReceiveMemoryWarning &#123; [super didReceiveMemoryWarning]; // Dispose of any resources that can be recreated.&#125;/*#pragma mark - Navigation// In a storyboard-based application, you will often want to do a little preparation before navigation- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender &#123; // Get the new view controller using [segue destinationViewController]. // Pass the selected object to the new view controller.&#125;*/@end 使用方法 1[self.navigationController pushViewController:chatController animated:YES safe:YES];]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[导入JPush后上传到svn上再checkout下来项目报错]]></title>
      <url>%2F2017%2F01%2F11%2FiOS%2F%E5%AF%BC%E5%85%A5JPush%E5%90%8E%E4%B8%8A%E4%BC%A0%E5%88%B0svn%E4%B8%8A%E5%86%8Dcheckout%E4%B8%8B%E6%9D%A5%E9%A1%B9%E7%9B%AE%E6%8A%A5%E9%94%99%2F</url>
      <content type="text"><![CDATA[在项目开发中,导入了激光推送的库，结果上传到svn后再checkout下来项目报错了。这是因为svn默认忽略静态库.a文件。解决办法：cornerstone-&gt;Preference 取消打钩 删除.a]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[解决UIWebView显示HTML字符串特殊符号问题]]></title>
      <url>%2F2017%2F01%2F10%2FiOS%2F%E8%A7%A3%E5%86%B3UIWebView%E6%98%BE%E7%A4%BAHTML%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%89%B9%E6%AE%8A%E7%AC%A6%E5%8F%B7%E9%97%AE%E9%A2%98%2F</url>
      <content type="text"><![CDATA[做项目时后台传入的HTML字符串本来是 &lt;p&gt;&lt;strong&gt;balabalaba&lt;/p&gt;&lt;/strong&gt; 结果被转码成了 &amp;lt;p&amp;gt;&amp;lt;strong&amp;gt;balabalaba&amp;lt;/strong&amp;gt;&amp;lt;/p&amp;gt; 加载到webView显示会有问题，解决办法: 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394959697- (NSString *)stringByDecodingXMLEntities &#123; NSUInteger myLength = [self length]; NSUInteger ampIndex = [self rangeOfString:@"&amp;" options:NSLiteralSearch].location; // Short-circuit if there are no ampersands. if (ampIndex == NSNotFound) &#123; return self; &#125; // Make result string with some extra capacity. NSMutableString *result = [NSMutableString stringWithCapacity:(myLength * 1.25)]; // First iteration doesn't need to scan to &amp; since we did that already, but for code simplicity's sake we'll do it again with the scanner. NSScanner *scanner = [NSScanner scannerWithString:self]; [scanner setCharactersToBeSkipped:nil]; NSCharacterSet *boundaryCharacterSet = [NSCharacterSet characterSetWithCharactersInString:@" \t\n\r;"]; do &#123; // Scan up to the next entity or the end of the string. NSString *nonEntityString; if ([scanner scanUpToString:@"&amp;" intoString:&amp;nonEntityString]) &#123; [result appendString:nonEntityString]; &#125; if ([scanner isAtEnd]) &#123; goto finish; &#125; // Scan either a HTML or numeric character entity reference. if ([scanner scanString:@"&amp;" intoString:NULL]) [result appendString:@"&amp;"]; else if ([scanner scanString:@"'" intoString:NULL]) [result appendString:@"'"]; else if ([scanner scanString:@""" intoString:NULL]) [result appendString:@"\""]; else if ([scanner scanString:@"&lt;" intoString:NULL]) [result appendString:@"&lt;"]; else if ([scanner scanString:@"&gt;" intoString:NULL]) [result appendString:@"&gt;"]; else if ([scanner scanString:@"&amp;#" intoString:NULL]) &#123; BOOL gotNumber; unsigned charCode; NSString *xForHex = @""; // Is it hex or decimal? if ([scanner scanString:@"x" intoString:&amp;xForHex]) &#123; gotNumber = [scanner scanHexInt:&amp;charCode]; &#125; else &#123; gotNumber = [scanner scanInt:(int*)&amp;charCode]; &#125; if (gotNumber) &#123; [result appendFormat:@"%C", charCode]; [scanner scanString:@";" intoString:NULL]; &#125; else &#123; NSString *unknownEntity = @""; [scanner scanUpToCharactersFromSet:boundaryCharacterSet intoString:&amp;unknownEntity]; [result appendFormat:@"&amp;#%@%@", xForHex, unknownEntity]; //[scanner scanUpToString:@";" intoString:&amp;unknownEntity]; //[result appendFormat:@"&amp;#%@%@;", xForHex, unknownEntity]; NSLog(@"Expected numeric character entity but got &amp;#%@%@;", xForHex, unknownEntity); &#125; &#125; else &#123; NSString *amp; [scanner scanString:@"&amp;" intoString:&amp;amp]; //an isolated &amp; symbol [result appendString:amp]; /* NSString *unknownEntity = @""; [scanner scanUpToString:@";" intoString:&amp;unknownEntity]; NSString *semicolon = @""; [scanner scanString:@";" intoString:&amp;semicolon]; [result appendFormat:@"%@%@", unknownEntity, semicolon]; NSLog(@"Unsupported XML character entity %@%@", unknownEntity, semicolon); */ &#125; &#125; while (![scanner isAtEnd]); finish: return result;&#125;]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[SDWebImage更新图片缓存的方法]]></title>
      <url>%2F2016%2F11%2F20%2FiOS%2FSDWebImage%E6%9B%B4%E6%96%B0%E5%9B%BE%E7%89%87%E7%BC%93%E5%AD%98%E7%9A%84%E6%96%B9%E6%B3%95%2F</url>
      <content type="text"><![CDATA[##SDWebImage加载图片，在图片链接相同但图片内容发生变更时，SDWebImage 并不会加载新的图片。此时的解决方案为设置SDWebImage 的option参数为SDWebImageRefreshCached。具体如下图：]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Swift怎么通过类名字符串来创建一个类]]></title>
      <url>%2F2016%2F09%2F20%2FiOS%2FSwift%E6%80%8E%E4%B9%88%E9%80%9A%E8%BF%87%E7%B1%BB%E5%90%8D%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%9D%A5%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%B1%BB%2F</url>
      <content type="text"><![CDATA[OC中可以直接通过类名的字符串转换成对应的类来操作,但是Swift中必须用到命名空间,也就是说Swift中通过字符串获取类的方式为1234567891011let namespace = NSBundle.mainBundle().infoDictionary!["CFBundleExecutable"]guard ((namespace as? String) != nil) else&#123;return &#125;let modelClass : AnyClass? = NSClassFromString((namespace as? String)!+"."+modelClassStr)let baseModel = modelClass?.alloc()]]></content>
    </entry>

    
  
  
</search>
